{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\NEXUS.DAWN\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useElevenLabs } from './hooks/useElevenLabs';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [selectedVoice, setSelectedVoice] = useState('');\n  const {\n    isSpeaking,\n    error,\n    speak,\n    stop,\n    voices,\n    isLoadingVoices,\n    loadVoices\n  } = useElevenLabs();\n  useEffect(() => {\n    loadVoices();\n  }, [loadVoices]);\n  const handleSpeak = async () => {\n    if (text && selectedVoice) {\n      await speak(text, selectedVoice);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Dawn Oracle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your branching narrative system is running!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tts-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter text to speak...\",\n          rows: 4,\n          className: \"tts-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedVoice,\n          onChange: e => setSelectedVoice(e.target.value),\n          className: \"voice-select\",\n          disabled: isLoadingVoices,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a voice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), voices.map(voice => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: voice.voice_id,\n            children: voice.name\n          }, voice.voice_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSpeak,\n            disabled: !text || !selectedVoice || isSpeaking,\n            className: \"speak-button\",\n            children: isSpeaking ? 'Speaking...' : 'Speak'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stop,\n            disabled: !isSpeaking,\n            className: \"stop-button\",\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"e+V3uEiQAkXJQqPMip5T9u45Qd0=\", false, function () {\n  return [useElevenLabs];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useElevenLabs","jsxDEV","_jsxDEV","App","_s","text","setText","selectedVoice","setSelectedVoice","isSpeaking","error","speak","stop","voices","isLoadingVoices","loadVoices","handleSpeak","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","rows","disabled","map","voice","voice_id","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/NEXUS.DAWN/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useElevenLabs } from './hooks/useElevenLabs';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [text, setText] = useState('');\r\n  const [selectedVoice, setSelectedVoice] = useState('');\r\n  const { isSpeaking, error, speak, stop, voices, isLoadingVoices, loadVoices } = useElevenLabs();\r\n\r\n  useEffect(() => {\r\n    loadVoices();\r\n  }, [loadVoices]);\r\n\r\n  const handleSpeak = async () => {\r\n    if (text && selectedVoice) {\r\n      await speak(text, selectedVoice);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Welcome to Dawn Oracle</h1>\r\n        <p>Your branching narrative system is running!</p>\r\n        \r\n        <div className=\"tts-container\">\r\n          <textarea\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder=\"Enter text to speak...\"\r\n            rows={4}\r\n            className=\"tts-input\"\r\n          />\r\n          \r\n          <select\r\n            value={selectedVoice}\r\n            onChange={(e) => setSelectedVoice(e.target.value)}\r\n            className=\"voice-select\"\r\n            disabled={isLoadingVoices}\r\n          >\r\n            <option value=\"\">Select a voice</option>\r\n            {voices.map((voice) => (\r\n              <option key={voice.voice_id} value={voice.voice_id}>\r\n                {voice.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          \r\n          <div className=\"button-container\">\r\n            <button\r\n              onClick={handleSpeak}\r\n              disabled={!text || !selectedVoice || isSpeaking}\r\n              className=\"speak-button\"\r\n            >\r\n              {isSpeaking ? 'Speaking...' : 'Speak'}\r\n            </button>\r\n            \r\n            <button\r\n              onClick={stop}\r\n              disabled={!isSpeaking}\r\n              className=\"stop-button\"\r\n            >\r\n              Stop\r\n            </button>\r\n          </div>\r\n          \r\n          {error && <p className=\"error-message\">{error}</p>}\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}